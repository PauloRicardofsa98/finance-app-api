{
    "swagger": "2.0",
    "info": {
        "title": "KafCode Finance API",
        "description": "Api for KafCode Finance",
        "version": "1.0.0"
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "description": "Enter 'Bearer' followed by a space and then your token"
        }
    },
    "security": [
        {
            "BearerAuth": []
        }
    ],
    "paths": {
        "/api/users": {
            "post": {
                "summary": "Create a new user",
                "tags": ["User"],
                "parameters": [
                    {
                        "name": "body",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateUserParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created",
                        "schema": {
                            "$ref": "#/definitions/UserWithToken"
                        }
                    },
                    "400": {
                        "description": "invalid params",
                        "schema": {
                            "$ref": "#/definitions/InvalidParamsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/me": {
            "get": {
                "summary": "Get authenticated user",
                "tags": ["User"],
                "responses": {
                    "200": {
                        "description": "User found",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "patch": {
                "summary": "Update authenticated user",
                "tags": ["User"],
                "parameters": [
                    {
                        "name": "body",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateUserParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete authenticated user ",
                "tags": ["User"],
                "responses": {
                    "200": {
                        "description": "User deleted",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/users/me/balance": {
            "get": {
                "summary": "Get authenticated user balance",
                "tags": ["User"],
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "type": "string",
                        "description": "Start date for the transactions query (format: YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-02-01"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "type": "string",
                        "description": "End date for the transactions query (format: YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-02-01"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User balance found",
                        "schema": {
                            "$ref": "#/definitions/UserBalance"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/transactions/me": {
            "get": {
                "summary": "Get all transactions from authenticated user",
                "tags": ["Transaction"],
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "type": "string",
                        "description": "Start date for the transactions query (format: YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-02-01"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "type": "string",
                        "description": "End date for the transactions query (format: YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-02-01"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transactions found",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Transaction"
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/TransactionNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create a new transaction in authenticated user",
                "tags": ["Transaction"],
                "parameters": [
                    {
                        "name": "body",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateTransactionParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Transaction created",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "400": {
                        "description": "invalid params",
                        "schema": {
                            "$ref": "#/definitions/InvalidParamsResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/TransactionNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/transactions/me/{transactionId}": {
            "patch": {
                "summary": "Update transaction by id from authenticated user",
                "tags": ["Transaction"],
                "parameters": [
                    {
                        "name": "transactionId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Transaction id"
                    },
                    {
                        "name": "body",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UpdateTransactionParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction updated",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "schema": {
                            "$ref": "#/definitions/TransactionNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete transaction by id from authenticated user",
                "tags": ["Transaction"],
                "parameters": [
                    {
                        "name": "transactionId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Transaction id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction deleted",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "schema": {
                            "$ref": "#/definitions/TransactionNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/users/login": {
            "post": {
                "summary": "Login user",
                "tags": ["User"],
                "parameters": [
                    {
                        "name": "body",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/LoginUserParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User logged",
                        "schema": {
                            "$ref": "#/definitions/UserWithToken"
                        }
                    },
                    "401": {
                        "description": "invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/refresh-token": {
            "post": {
                "summary": "Refresh user token",
                "tags": ["User"],
                "parameters": [
                    {
                        "name": "body",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/RefreshTokenParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tokens Generated",
                        "schema": {
                            "$ref": "#/definitions/Tokens"
                        }
                    },
                    "401": {
                        "description": "invalid token",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "8cdbed04-4b2a-4377-9bd6-a9f7dcae5d9d"
                },
                "firstName": {
                    "type": "string",
                    "example": "John"
                },
                "lastName": {
                    "type": "string",
                    "example": "Doe"
                },
                "email": {
                    "type": "string",
                    "example": "example@example.com.br"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "UserWithToken": {
            "allOf": [
                {
                    "$ref": "#/definitions/User"
                },
                {
                    "type": "object",
                    "properties": {
                        "tokens": {
                            "type": "object",
                            "properties": {
                                "accessToken": {
                                    "type": "string",
                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6Ikp..."
                                },
                                "refreshToken": {
                                    "type": "string",
                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6Ikp..."
                                }
                            }
                        }
                    }
                }
            ]
        },
        "Tokens": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "example": "8cdbed04-4b2a-4377-9bd6-a9f7dcae5d9d"
                },
                "refreshToken": {
                    "type": "string",
                    "example": "8cdbed04-4b2a-4377-9bd6-a9f7dcae5d9d"
                }
            }
        },
        "UserBalance": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "string",
                    "example": 1000
                },
                "earnings": {
                    "type": "string",
                    "example": 100
                },
                "expenses": {
                    "type": "string",
                    "example": 100
                },
                "investments": {
                    "type": "string",
                    "example": 100
                },
                "earningsPercentage": {
                    "type": "string",
                    "example": 10
                },
                "expensesPercentage": {
                    "type": "string",
                    "example": 10
                },
                "investmentsPercentage": {
                    "type": "string",
                    "example": 10
                }
            }
        },
        "CreateUserParams": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string",
                    "example": "John"
                },
                "lastName": {
                    "type": "string",
                    "example": "Doe"
                },
                "email": {
                    "type": "string",
                    "example": "example@example.com.br"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "LoginUserParams": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "example@example.com.br"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "RefreshTokenParams": {
            "type": "object",
            "properties": {
                "refresh-token": {
                    "type": "string",
                    "required": true
                }
            }
        },
        "UserNotFoundResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "User not found"
                }
            }
        },

        "Transaction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "8cdbed04-4b2a-4377-9bd6-a9f7dcae5d9d"
                },
                "userId": {
                    "type": "string",
                    "example": "8cdbed04-4b2a-4377-9bd6-a9f7dcae5d9d"
                },
                "name": {
                    "type": "string",
                    "example": "salary"
                },
                "type": {
                    "type": "string",
                    "example": "EARNING",
                    "description": "EARNING, EXPENSE, INVESTMENT"
                },
                "amount": {
                    "type": "number",
                    "example": 100
                },
                "date": {
                    "type": "string",
                    "example": "2025-02-01T00:00:00.000Z"
                }
            }
        },
        "CreateTransactionParams": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "string",
                    "example": "8cdbed04-4b2a-4377-9bd6-a9f7dcae5d9d"
                },
                "name": {
                    "type": "string",
                    "example": "salary"
                },
                "type": {
                    "type": "string",
                    "example": "EARNING",
                    "description": "EARNING, EXPENSE, INVESTMENT"
                },
                "amount": {
                    "type": "number",
                    "example": 100
                },
                "date": {
                    "type": "string",
                    "example": "2025-02-01T00:00:00.000Z"
                }
            }
        },
        "UpdateTransactionParams": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "salary"
                },
                "type": {
                    "type": "string",
                    "example": "EARNING",
                    "description": "EARNING, EXPENSE, INVESTMENT"
                },
                "amount": {
                    "type": "number",
                    "example": 100
                },
                "date": {
                    "type": "string",
                    "example": "2025-02-01T00:00:00.000Z"
                }
            }
        },
        "TransactionNotFoundResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Transaction not found"
                }
            }
        },

        "InternalServerErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Internal server error"
                }
            }
        },

        "InvalidParamsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Invalid params"
                }
            }
        },

        "UnauthorizedErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                }
            }
        }
    }
}
