{
    "swagger": "2.0",
    "info": {
        "title": "KafCode Finance API",
        "description": "Api for KafCode Finance",
        "version": "1.0.0"
    },
    "paths": {
        "/api/users": {
            "post": {
                "summary": "Create a new user",
                "tags": ["User"],
                "parameters": [
                    {
                        "name": "body",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateUserParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "invalid params",
                        "schema": {
                            "$ref": "#/definitions/InvalidParamsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/{userId}/balance": {
            "get": {
                "summary": "Get user balance by id",
                "tags": ["User"],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "User id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User balance found",
                        "schema": {
                            "$ref": "#/definitions/UserBalance"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/{userId}": {
            "get": {
                "summary": "Get user by id",
                "tags": ["User"],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "User id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete user by id",
                "tags": ["User"],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "User id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update user by id",
                "tags": ["User"],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "User id"
                    },
                    {
                        "name": "body",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateUserParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/transactions": {
            "get": {
                "summary": "Get all transactions by user id",
                "tags": ["Transaction"],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "description": "User id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transactions found",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Transaction"
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/TransactionNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new transaction",
                "tags": ["Transaction"],
                "parameters": [
                    {
                        "name": "body",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateTransactionParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Transaction created",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "400": {
                        "description": "invalid params",
                        "schema": {
                            "$ref": "#/definitions/InvalidParamsResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/TransactionNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/transactions/{transactionId}": {
            "patch": {
                "summary": "Update transaction by id",
                "tags": ["Transaction"],
                "parameters": [
                    {
                        "name": "transactionId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Transaction id"
                    },
                    {
                        "name": "body",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UpdateTransactionParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction updated",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "schema": {
                            "$ref": "#/definitions/TransactionNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "8cdbed04-4b2a-4377-9bd6-a9f7dcae5d9d"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "email": {
                    "type": "string",
                    "example": "example@example.com.br"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "UserBalance": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "string",
                    "example": 1000
                },
                "earnings": {
                    "type": "string",
                    "example": 100
                },
                "expenses": {
                    "type": "string",
                    "example": 100
                },
                "investments": {
                    "type": "string",
                    "example": 100
                }
            }
        },
        "CreateUserParams": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "email": {
                    "type": "string",
                    "example": "example@example.com.br"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "UserNotFoundResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "User not found"
                }
            }
        },

        "Transaction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "8cdbed04-4b2a-4377-9bd6-a9f7dcae5d9d"
                },
                "user_id": {
                    "type": "string",
                    "example": "8cdbed04-4b2a-4377-9bd6-a9f7dcae5d9d"
                },
                "name": {
                    "type": "string",
                    "example": "salary"
                },
                "type": {
                    "type": "string",
                    "example": "EARNING",
                    "description": "EARNING, EXPENSE, INVESTMENT"
                },
                "amount": {
                    "type": "number",
                    "example": 100
                },
                "date": {
                    "type": "string",
                    "example": "2025-02-01T00:00:00.000Z"
                }
            }
        },
        "CreateTransactionParams": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string",
                    "example": "8cdbed04-4b2a-4377-9bd6-a9f7dcae5d9d"
                },
                "name": {
                    "type": "string",
                    "example": "salary"
                },
                "type": {
                    "type": "string",
                    "example": "EARNING",
                    "description": "EARNING, EXPENSE, INVESTMENT"
                },
                "amount": {
                    "type": "number",
                    "example": 100
                },
                "date": {
                    "type": "string",
                    "example": "2025-02-01T00:00:00.000Z"
                }
            }
        },
        "UpdateTransactionParams": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "salary"
                },
                "type": {
                    "type": "string",
                    "example": "EARNING",
                    "description": "EARNING, EXPENSE, INVESTMENT"
                },
                "amount": {
                    "type": "number",
                    "example": 100
                },
                "date": {
                    "type": "string",
                    "example": "2025-02-01T00:00:00.000Z"
                }
            }
        },
        "TransactionNotFoundResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Transaction not found"
                }
            }
        },

        "InternalServerErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Internal server error"
                }
            }
        },

        "InvalidParamsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Invalid params"
                }
            }
        }
    }
}
